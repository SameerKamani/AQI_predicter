name: Train - Daily

on:
  schedule:
    - cron: '15 2 * * *'
  workflow_dispatch:

concurrency:
  group: train-daily
  cancel-in-progress: false

jobs:
  train-stack-predict:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install minimal dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas>=2.0.0
          pip install numpy scipy scikit-learn
          pip install lightgbm xgboost joblib optuna matplotlib seaborn shap
          pip install "protobuf>=3.20,<4.0"
          pip install feast[sqlite] --no-deps

      - name: Ensure features exist (fallback rebuild if missing)
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: |
          if [ ! -f Data/feature_store/karachi_daily_features.parquet ]; then 
            echo 'Features parquet missing. Rebuilding features...';
            python Data_Collection/data_fetch.py;
          else
            echo 'Found features parquet.';
          fi

      - name: Train LightGBM
        working-directory: Models
        run: python train_lightgbm.py --holdout_days 90 --tune --tune_trials 100

      - name: Train HGBR
        working-directory: Models
        run: python train_hgbr.py --holdout_days 90 --tune --tune_trials 100

      - name: Train Linear
        working-directory: Models
        run: python train_linear.py --holdout_days 90

      - name: Train RandomForest
        working-directory: Models
        run: python train_rf.py --holdout_days 90

      - name: Stack and calibrate
        working-directory: Models
        run: python stacking_linear_lightgbm.py --holdout_days 90 --constrain_nonneg --sum_to_one --calibrate

      - name: Run EDA
        working-directory: Models
        run: python EDA/run_eda.py

      - name: Predict latest
        working-directory: Models
        run: python predict_latest.py

      - name: Alert on hazardous AQI (hd1 >= 200)
        shell: bash
        run: |
          python - <<'PY'
          import json, sys
          with open('Models/Models/registry/latest_forecast.json','r',encoding='utf-8') as f:
              blob = json.load(f)
          hd1 = (blob.get('blend') or {}).get('hd1')
          if hd1 is None:
              print('No hd1 value in latest forecast; skipping alert')
              sys.exit(0)
          try:
              v = float(hd1)
          except Exception:
              v = -1
          if v >= 200.0:
              print(f'HAZARDOUS AQI ALERT: blended hd1={v:.1f} >= 200')
              # Fail the job to raise visibility; change to sys.exit(0) if you prefer non-blocking notice
              sys.exit(1)
          else:
              print(f'OK: blended hd1={v:.1f} < 200')
          PY

      - name: Upload summaries and models
        uses: actions/upload-artifact@v4
        with:
          name: train-artifacts-${{ github.run_id }}
          path: |
            Models/EDA/lightgbm_output/summary.json
            Models/EDA/hgbr_output/summary.json
            Models/EDA/linear_output/summary.json
            Models/EDA/blend_output/summary.json
            Models/Models/registry/*_preds.csv
            Models/Models/registry/blend_weights_*.json
            Models/Models/registry/latest_forecast.json
          retention-days: 14


