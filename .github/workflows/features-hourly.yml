name: Features - Hourly

on:
  schedule:
    - cron: '0 * * * *'  # Every hour at minute 0
  workflow_dispatch:      # Manual trigger capability

concurrency:
  group: features-hourly
  cancel-in-progress: true

jobs:
  build-features:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install minimal dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas>=2.0.0
          pip install numpy scipy scikit-learn
          pip install lightgbm xgboost joblib
          pip install "protobuf>=3.20,<4.0"
          pip install feast[sqlite] --no-deps

      - name: Build features (today, append)
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: |
          python Data_Collection/data_fetch.py

      - name: Feast apply + materialize last 1 day
        run: |
          cd feature_repo
          python -m feast apply
          START=$(date -u -d "-1 day" +"%Y-%m-%dT%H:%M:%SZ")
          END=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          python -m feast materialize "$START" "$END"

      - name: Generate real-time predictions
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: |
          python Models/predict_realtime.py

      - name: Upload feature artifacts
        uses: actions/upload-artifact@v4
        with:
          name: features-${{ github.run_id }}
          path: |
            Data/feature_store/karachi_daily_features.parquet
            Data/feature_store/karachi_daily_features.csv
            Data/raw/karachi_daily_aqi_weather.csv
            Models/Models/registry/latest_forecast.json
          retention-days: 10


